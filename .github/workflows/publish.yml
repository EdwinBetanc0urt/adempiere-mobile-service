# This workflow will build a Java project with Gradle
# This file was contributed by ysenih@erpya.com from ERP Consultores y Asociados, C.A
# This file was contributed by EdwinBetanc0urt@outlook.com https://github.com/EdwinBetanc0urt
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Publish Project

permissions:
  contents: write # to upload release assets
  packages: write # to publish packages

on:
  release:
    types:
      - created

jobs:

  # Build dist application adempiere-mobile-service
  build-app:
    name: Build ADempiere Mobile Service
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Setup Java JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-package: 'jdk'
          java-version: 17
          architecture: x64

      - name: Setup Gradle 9
        uses: gradle/actions/setup-gradle@v5
        with:
          gradle-version: 9.1.0 # current

      - name: Create Release with Gradle
        run: gradle createRelease --warning-mode all --stacktrace
        env:
          ORG_GRADLE_PROJECT_deployUsername: ${{ secrets.DEPLOY_USER }}
          ORG_GRADLE_PROJECT_deployToken: ${{ secrets.DEPLOY_TOKEN }}
          ORG_GRADLE_PROJECT_deployRepository: ${{ secrets.DEPLOY_REPOSITORY }}
          GITHUB_DEPLOY_USER: ${{ github.actor }}
          GITHUB_DEPLOY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_DEPLOY_REPOSITORY: ${{ secrets.DEPLOY_REPOSITORY }}

      - name: Prepare flat artifacts
        run: |
          mkdir -p flat_artifacts/
          cp build/descriptors/adempiere-mobile-service.dsc flat_artifacts/ || echo "Warning: .dsc file not found"
          cp build/release/adempiere-mobile-service.* flat_artifacts/ || echo "Warning: release files not found"
          cp docker-compose/envoy/envoy.yaml flat_artifacts/ || echo "Warning: envoy.yaml not found"
          cp resources/env.yaml flat_artifacts/ || echo "Warning: env.yaml not found"
          ls -la flat_artifacts/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v5
        with:
          name: release-artifacts
          path: flat_artifacts/*
          retention-days: 1



  publish-binaries:
    name: Publish Release Assets
    needs: build-app
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: release-artifacts
          path: artifacts/

      - name: List Assets
        run: |
          tree artifacts

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            artifacts/adempiere-mobile-service.dsc
            artifacts/env.yaml
            artifacts/envoy.yaml
            artifacts/adempiere-mobile-service.zip.MD5
            artifacts/adempiere-mobile-service.zip
            artifacts/adempiere-mobile-service.tar.MD5
            artifacts/adempiere-mobile-service.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



  # Check secrets to push image in docker hub registry
  check-docker-secrets:
    name: Check if docker hub registry information was set on secrets
    needs:
      - build-app
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_docker_registry_secrets_job.outputs.is_have_secrets }}
    steps:
      - id: check_docker_registry_secrets_job
        run: |
          if [[ "${{ secrets.DOCKER_HUB_REPO_NAME }}" != "" && \
                "${{ secrets.DOCKER_USERNAME }}" != "" && \
                "${{ secrets.DOCKER_TOKEN }}" != "" ]]; \
          then
            echo "Secrets to use a container registry are configured in the repo"
            echo "is_have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use a container registry were not configured in the repo"
            echo "is_have_secrets=false" >> $GITHUB_OUTPUT
          fi

  # TODO: Download .tar and add docker image without uncompress
  # Publish docker alpine image in Docker Hub Registry to application
  push-alpine-imame-dhr:
    name: Push docker alpine image to Docker Hub
    needs:
      - check-docker-secrets
    # Skip step based on secret
    if: needs.check-docker-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Download dist artifacts
        uses: actions/download-artifact@v6
        with:
          name: release-artifacts
          path: artifacts/

      - name: Unzip Asset
        run: |
          tree artifacts
          unzip artifacts/adempiere-mobile-service.zip -d docker/

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          # CONFIGURE DOCKER SECRETS INTO REPOSITORY
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push alpine image in Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/alpine.Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_REPO_NAME }}:alpine-${{ github.event.release.tag_name }}
            ${{ secrets.DOCKER_HUB_REPO_NAME }}:alpine

  # TODO: Download .tar and add docker image without uncompress
  # Publish docker multiplatform image in Docker Hub Registry to application
  push-imame-dhr:
    name: Push docker ubuntu multiplatform image to Docker Hub
    needs:
      - check-docker-secrets
    # Skip step based on secret
    if: needs.check-docker-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Download dist artifacts
        uses: actions/download-artifact@v6
        with:
          name: release-artifacts
          path: artifacts/

      - name: Unzip Asset
        run: |
          tree artifacts
          unzip artifacts/adempiere-mobile-service.zip -d docker/

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          # CONFIGURE DOCKER SECRETS INTO REPOSITORY
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push ubuntu image in Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/ubuntu.Dockerfile
          platforms: linux/amd64,linux/amd64/v2,linux/arm64/v8
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_REPO_NAME }}:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKER_HUB_REPO_NAME }}:latest



  # Check secrets to push image in docker hub registry
  check-proxy-docker-secrets:
    name: Check if docker hub registry information was set on secrets
    needs:
      - build-app
    runs-on: ubuntu-latest
    outputs:
      is_have_secrets: ${{ steps.check_secret_job.outputs.is_have_secrets }}
    steps:
      - id: check_secret_job
        run: |
          if [[ "${{ secrets.DOCKER_HUB_PROXY_REPO_NAME }}" != "" && \
                "${{ secrets.DOCKER_USERNAME }}" != "" && \
                "${{ secrets.DOCKER_TOKEN }}" != "" ]]; \
          then
            echo "Secrets to use a container registry are configured in the repo"
            echo "is_have_secrets=true" >> $GITHUB_OUTPUT
          else
            echo "Secrets to use a container registry were not configured in the repo"
            echo "is_have_secrets=false" >> $GITHUB_OUTPUT
          fi

  # TODO: Download .tar and add docker image without uncompress
  # Publish docker image multiplatform in Docker Hub Registry to application
  push-grpc-proxy-imame-dhr:
    name: Push grpc-proxy docker image to Docker Hub
    needs:
      - check-proxy-docker-secrets
    # Skip step based on secret
    if: needs.check-proxy-docker-secrets.outputs.is_have_secrets == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v5

      - name: Download dist artifacts
        uses: actions/download-artifact@v6
        with:
          name: release-artifacts
          path: artifacts/

      - name: Move descriptor
        run: |
          tree artifacts
          cp artifacts/adempiere-mobile-service.dsc docker/ || echo "Warning: descriptor file not found"

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          # CONFIGURE DOCKER SECRETS INTO REPOSITORY
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push image in Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/proxy.Dockerfile
          platforms: linux/amd64,linux/amd64/v2,linux/arm64/v8
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_PROXY_REPO_NAME }}:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKER_HUB_PROXY_REPO_NAME }}:latest
