syntax = "proto3";

option java_package = "org.spin.proto.mobile.settings";
option java_multiple_files = true;

import "google/api/annotations.proto";

package settings;

message BaseSettings {
	bool result = 1;
	string message = 2;
	BaseSettingsData data = 3;
}

message GetBaseSettingsRequest {

}

message KeyValueData {
	int32 id = 1;
	string title = 2;
}

message TimeWish {
	string wish = 1;
	string sub_title = 2;
	string image = 3;
}

message DutySchedule {
	TimeDefinition start_time = 1;
	TimeDefinition end_time = 2;
}

message TimeDefinition {
	int32 hour = 1;
	int32 min = 2;
	int32 sec = 3;
}

message LocationServices {
	bool google = 1;
	bool barikoi = 2;
}

message BarikoiApi {
	string key = 1;
	string secret = 2;
	string endpoint = 3;
	int32 status_id = 4;
}

message BreakStatus {
	string break_time = 1;
	string back_time = 2;
	string reason = 3;
	string created_at = 4;
	string updated_at = 5;
	string status = 6;
	string diff_time = 7;
}

message LiveTracking {
	string app_sync_time = 1;
	string live_data_store_time = 2;
}

message BaseSettingsData {
	bool is_admin = 1;
	bool is_hr = 2;
	bool is_manager = 3;
	bool is_face_registered = 4;
	bool multi_checkin = 5;
	bool location_bind = 6;
	bool is_ip_enabled = 7;
	repeated KeyValueData departments = 8;
	repeated KeyValueData designations = 9;
	repeated string employee_types = 10;
	repeated string permissions = 11;
	TimeWish time_wish = 12;
	string time_zone = 13;
	string currency_symbol = 14;
	string currency_code = 15;
	string attendance_method = 16;
	DutySchedule duty_schedule = 17;
	LocationServices location_services = 18;
	string google_api_key = 19;
	BarikoiApi barikoi_api = 20;
	BreakStatus break_status = 21;
	LiveTracking live_tracking = 22;
	bool location_service = 23;
	string app_theme = 24;
	bool is_team_lead = 25;
	repeated string notification_channels = 26;
}


message DashboardScreen {
	bool result = 1;
	string message = 2;
	DashboardScreenData data = 3;
}

message DashboardScreenData {
	repeated DashboardScreenDataValue data = 1;
}

message DashboardScreenDataValue {
	string name = 1;
	string slug = 2;
	int32 position = 3;
	string icon = 4;
	string image_type = 5;
}

message GetDashboardScreenRequest {

}

message UpdateCount {
	string name = 1;
	int32 count = 2;
}

message UpdateData {
	int32 id = 1;
	string name = 2;
	string slug = 3;
	int32 position = 4;
	string icon = 5;
	int32 number = 6;
	string text = 7;
	string end_point = 8;
	string button_text = 9;
	string color = 10;
	string title = 11;
	string date_range = 12;
	string start_date = 13;
	string end_date = 14;
	bool is_creator = 15;
	int32 users_count = 16;
	repeated Member members = 17;
}

message Update {
	string slug = 1;
	string label = 2;
	string title = 3;
	repeated UpdateData data = 4;
	string end_point = 5;
}

message CompleteTask {
	int32 date = 1;
	int32 complete = 2;
}

message IncompleteTask {
	int32 date = 1;
	int32 incomplete = 2;
}

message StaticsticsData {
	repeated CompleteTask complete_tasks = 1;
	repeated IncompleteTask incomplete_tasks = 2;
}

message Staticstics {
	string slug = 1;
	string label = 2;
	StaticsticsData data = 3;
}

message CalendarData {
	string current_month = 1;
	string selected_date = 2;
}

message Calendar {
	string slug = 1;
	string label = 2;
	CalendarData data = 3;
}

message Member {
	int32 id = 1;
	string name = 2;
	string phone = 3;
	string email = 4;
	string designation = 5;
	string department = 6;
	string avatar = 7;
}

message Project {
	int32 id = 1;
	string title = 2;
	string date_range = 3;
	int32 user_count = 4;
	repeated Member members = 5;
	int32 progress = 6;
	string color = 7;
	string status = 8;
	string priority = 9;
	string priority_color = 10;
	bool clickable = 11;
	string end_point = 12;
}

message HomeScreenData {
	Update project_summary = 1;
	Staticstics staticstics = 2;
	Update tasks = 3;
	repeated Project projects = 4;
	Update notices = 5;
	Update supports = 6;
	Calendar calendar = 7;
	UpdateCount project_count = 8;
	UpdateCount client_count = 9;
	UpdateCount task_count = 10;
}

message HomeScreen {
	bool result = 1;
	string message = 2;
	HomeScreenData data = 3;
}

message GetHomeScreenRequest {

}

service SettingsService {
	rpc GetBaseSettings(GetBaseSettingsRequest) returns (BaseSettings) {
		option (google.api.http) = {
			get: "/app/base-settings"
		};
	}

	rpc GetDashboardScreen(GetDashboardScreenRequest) returns (DashboardScreen) {
		option (google.api.http) = {
			get: "/app/dashboard-screen"
		};
	}
	
	rpc GetHomeScreen(GetHomeScreenRequest) returns (HomeScreen) {
		option (google.api.http) = {
			get: "/app/home-screen"
		};
	}
}
